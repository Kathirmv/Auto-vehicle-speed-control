 // defines pins numbers
const int trigPin = 9;
const int echoPin = 10;
const int mtrin1 = 11;
const int mtrin2 = 13;
const int en1 = 6;


// defines variables
long duration;
int distance;
int safetyDistance;


void setup() {
pinMode(trigPin, OUTPUT); // Sets the trigPin as an Output
pinMode(echoPin, INPUT); // Sets the echoPin as an Input
pinMode(mtrin1, OUTPUT);
pinMode(mtrin2, OUTPUT);
pinMode(en1, OUTPUT);
Serial.begin(9600); // Starts the serial communication
}


void loop() {
// Clears the trigPin
digitalWrite(trigPin, LOW);
delayMicroseconds(2);

// Sets the trigPin on HIGH state for 10 micro seconds
digitalWrite(trigPin, HIGH);
delayMicroseconds(10);
digitalWrite(trigPin, LOW);

// Reads the echoPin, returns the sound wave travel time in microseconds
duration = pulseIn(echoPin, HIGH);

// Calculating the distance
distance= duration*0.034/2;

safetyDistance = distance;
if(safetyDistance <= 20){
  digitalWrite(mtrin1, LOW);
  digitalWrite(mtrin2, LOW);
  analogWrite(en1,0);
}
else if (safetyDistance <= 75){
  digitalWrite(mtrin1, HIGH);
  digitalWrite(mtrin2, LOW);
  analogWrite(en1,76);
}
else if (safetyDistance <= 75){
  digitalWrite(mtrin1, HIGH);
  digitalWrite(mtrin2, LOW);
  analogWrite(en1,90);
}

else if (safetyDistance <= 130){
  digitalWrite(mtrin1, HIGH);
  digitalWrite(mtrin2, LOW);
  analogWrite(en1,120);
}

else{
  digitalWrite(mtrin1, LOW);
  digitalWrite(mtrin2, LOW);
}

// Prints the distance on the Serial Monitor
Serial.print("Distance: ");
Serial.println(distance);
}
